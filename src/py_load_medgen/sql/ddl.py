# Copyright (c) 2025-2026 Gowtham Adamane Rao. All Rights Reserved.
#
# Licensed under the Prosperity Public License 3.0.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License in the LICENSE file at the root
# of this repository, or at: https://prosperitylicense.com/versions/3.0.0
#
# Commercial use beyond a 30-day trial requires a separate license.
# --- DDL for Metadata Logging ---

ETL_AUDIT_LOG_DDL = """
CREATE TABLE IF NOT EXISTS etl_audit_log (
    log_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    run_id UUID NOT NULL,
    package_version VARCHAR(50) NOT NULL,
    load_mode VARCHAR(20),
    medgen_release_version VARCHAR(100), -- e.g., a release date or version number
    source_files JSONB, -- {'filename': '...', 'checksum': '...'}
    start_time TIMESTAMPTZ NOT NULL,
    end_time TIMESTAMPTZ,
    status VARCHAR(20) NOT NULL, -- In Progress, Succeeded, Failed
    records_extracted BIGINT,
    records_loaded BIGINT,
    error_count BIGINT,
    error_message TEXT
);
"""

ETL_RUN_DETAILS_DDL = """
CREATE TABLE IF NOT EXISTS etl_run_details (
    detail_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    log_id BIGINT NOT NULL,
    table_name VARCHAR(100) NOT NULL,
    records_extracted BIGINT,
    records_inserted BIGINT,
    records_deleted BIGINT,
    records_updated BIGINT,
    CONSTRAINT fk_etl_audit_log
        FOREIGN KEY(log_id)
        REFERENCES etl_audit_log(log_id)
        ON DELETE CASCADE
);
"""

ETL_RUN_DETAILS_INDEX_DDL = (
    "CREATE INDEX IF NOT EXISTS idx_etl_run_details_log_id ON etl_run_details (log_id);"
)


# --- DDL for Staging Tables ---

STAGING_CONCEPTS_DDL = """
CREATE UNLOGGED TABLE IF NOT EXISTS staging_medgen_concepts (
    cui VARCHAR(10) NOT NULL,
    lat VARCHAR(3) NOT NULL,
    ts CHAR(1),
    lui VARCHAR(10) NOT NULL,
    stt VARCHAR(20),
    sui VARCHAR(10) NOT NULL,
    ispref CHAR(1),
    aui VARCHAR(10),
    saui VARCHAR(10),
    scui VARCHAR(50),
    sdui VARCHAR(50),
    sab VARCHAR(40) NOT NULL,
    tty VARCHAR(40) NOT NULL,
    code VARCHAR(50) NOT NULL,
    record_str TEXT NOT NULL,
    srl VARCHAR(10) NOT NULL,
    suppress CHAR(1) NOT NULL,
    cvf VARCHAR(50),
    raw_record TEXT
);
"""

# --- DDL for Relationships ---

STAGING_MEDGEN_RELATIONSHIPS_DDL = """
CREATE UNLOGGED TABLE IF NOT EXISTS staging_medgen_relationships (
    cui1 VARCHAR(10) NOT NULL,
    aui1 VARCHAR(10),
    stype1 VARCHAR(50) NOT NULL,
    rel VARCHAR(100) NOT NULL,
    cui2 VARCHAR(10) NOT NULL,
    aui2 VARCHAR(10),
    stype2 VARCHAR(50) NOT NULL,
    rela VARCHAR(100),
    rui VARCHAR(10),
    srui VARCHAR(50),
    sab VARCHAR(40) NOT NULL,
    sl VARCHAR(40),
    rg VARCHAR(10),
    dir VARCHAR(1),
    suppress CHAR(1) NOT NULL,
    cvf VARCHAR(50),
    raw_record TEXT
);
"""

PRODUCTION_MEDGEN_RELATIONSHIPS_DDL = """
CREATE TABLE IF NOT EXISTS {table_name} (
    relationship_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cui1 VARCHAR(10) NOT NULL,
    aui1 VARCHAR(10),
    stype1 VARCHAR(50) NOT NULL,
    rel VARCHAR(100) NOT NULL,
    cui2 VARCHAR(10) NOT NULL,
    aui2 VARCHAR(10),
    stype2 VARCHAR(50) NOT NULL,
    rela VARCHAR(100),
    rui VARCHAR(10),
    srui VARCHAR(50),
    sab VARCHAR(40) NOT NULL,
    sl VARCHAR(40),
    rg VARCHAR(10),
    dir VARCHAR(1),
    suppress CHAR(1) NOT NULL,
    cvf VARCHAR(50),
    is_active BOOLEAN NOT NULL DEFAULT true,
    last_updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    raw_record TEXT
);
"""

PRODUCTION_MEDGEN_RELATIONSHIPS_INDEXES_DDL = [
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_cui1 ON {table_name} (cui1);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_cui2 ON {table_name} (cui2);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_rel ON {table_name} (rel);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_sab ON {table_name} (sab);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_is_active "
    "ON {table_name} (is_active);",
]

# --- DDL for HPO Mapping ---

STAGING_MEDGEN_HPO_MAPPING_DDL = """
CREATE UNLOGGED TABLE IF NOT EXISTS staging_medgen_hpo_mapping (
    cui VARCHAR(10) NOT NULL,
    sdui VARCHAR(50) NOT NULL,
    hpo_str TEXT NOT NULL,
    medgen_str TEXT NOT NULL,
    medgen_str_sab VARCHAR(40) NOT NULL,
    sty VARCHAR(100) NOT NULL,
    raw_record TEXT
);
"""

PRODUCTION_MEDGEN_HPO_MAPPING_DDL = """
CREATE TABLE IF NOT EXISTS {table_name} (
    hpo_mapping_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cui VARCHAR(10) NOT NULL,
    sdui VARCHAR(50) NOT NULL,
    hpo_str TEXT NOT NULL,
    medgen_str TEXT NOT NULL,
    medgen_str_sab VARCHAR(40) NOT NULL,
    sty VARCHAR(100) NOT NULL,
    is_active BOOLEAN NOT NULL DEFAULT true,
    last_updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    raw_record TEXT
);
"""

PRODUCTION_MEDGEN_HPO_MAPPING_INDEXES_DDL = [
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_cui ON {table_name} (cui);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_sdui ON {table_name} (sdui);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_is_active "
    "ON {table_name} (is_active);",
]

# --- DDL for Semantic Types ---

STAGING_SEMANTIC_TYPES_DDL = """
CREATE UNLOGGED TABLE IF NOT EXISTS staging_medgen_semantic_types (
    cui VARCHAR(10) NOT NULL,
    tui VARCHAR(4) NOT NULL,
    stn VARCHAR(100),
    sty TEXT NOT NULL,
    atui VARCHAR(12),
    cvf VARCHAR(50),
    raw_record TEXT
);
"""

PRODUCTION_SEMANTIC_TYPES_DDL = """
CREATE TABLE IF NOT EXISTS {table_name} (
    semantic_type_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cui VARCHAR(10) NOT NULL,
    tui VARCHAR(4) NOT NULL,
    stn VARCHAR(100),
    sty TEXT NOT NULL,
    atui VARCHAR(12),
    cvf VARCHAR(50),
    is_active BOOLEAN NOT NULL DEFAULT true,
    last_updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    raw_record TEXT
);
"""

PRODUCTION_SEMANTIC_TYPES_INDEXES_DDL = [
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_cui ON {table_name} (cui);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_tui ON {table_name} (tui);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_is_active "
    "ON {table_name} (is_active);",
]


# --- DDL for Source Attributes ---

STAGING_MEDGEN_SOURCES_DDL = """
CREATE UNLOGGED TABLE IF NOT EXISTS staging_medgen_sources (
    cui VARCHAR(10) NOT NULL,
    lui VARCHAR(10),
    sui VARCHAR(10),
    metaui VARCHAR(50),
    stype VARCHAR(50) NOT NULL,
    code VARCHAR(50),
    atui VARCHAR(12) NOT NULL,
    satui VARCHAR(50),
    atn VARCHAR(100) NOT NULL,
    sab VARCHAR(40) NOT NULL,
    atv TEXT,
    suppress CHAR(1) NOT NULL,
    cvf VARCHAR(50),
    raw_record TEXT
);
"""

PRODUCTION_MEDGEN_SOURCES_DDL = """
CREATE TABLE IF NOT EXISTS {table_name} (
    source_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cui VARCHAR(10) NOT NULL,
    source_abbreviation VARCHAR(40) NOT NULL,
    attribute_name VARCHAR(100) NOT NULL,
    attribute_value TEXT,
    is_active BOOLEAN NOT NULL DEFAULT true,
    last_updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    raw_record TEXT
);
"""

PRODUCTION_MEDGEN_SOURCES_INDEXES_DDL = [
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_cui ON {table_name} (cui);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_source_attr "
    "ON {table_name} (source_abbreviation, attribute_name);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_is_active "
    "ON {table_name} (is_active);",
]


# --- DDL for Production Tables ---

# DDL for the main 'names' table in production.
# This table includes columns for soft-deletes and versioning.
PRODUCTION_NAMES_DDL = """
CREATE TABLE IF NOT EXISTS {table_name} (
    name_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cui VARCHAR(10) NOT NULL,
    name TEXT NOT NULL,
    source VARCHAR(40) NOT NULL,
    suppress CHAR(1) NOT NULL,
    is_active BOOLEAN NOT NULL DEFAULT true,
    last_updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    raw_record TEXT
);
"""

# DDL for indexes on the production 'names' table.
# These are created after data loading for better performance.
PRODUCTION_NAMES_INDEXES_DDL = [
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_cui ON {table_name} (cui);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_is_active "
    "ON {table_name} (is_active);",
]


# DDL for the main 'concepts' table in production.
PRODUCTION_CONCEPTS_DDL = """
CREATE TABLE IF NOT EXISTS {table_name} (
    concept_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cui VARCHAR(10) NOT NULL,
    lat VARCHAR(3) NOT NULL,
    ts CHAR(1),
    lui VARCHAR(10) NOT NULL,
    stt VARCHAR(20),
    sui VARCHAR(10) NOT NULL,
    ispref CHAR(1),
    aui VARCHAR(10),
    saui VARCHAR(10),
    scui VARCHAR(50),
    sdui VARCHAR(50),
    sab VARCHAR(40) NOT NULL,
    tty VARCHAR(40) NOT NULL,
    code VARCHAR(50) NOT NULL,
    record_str TEXT NOT NULL,
    srl VARCHAR(10) NOT NULL,
    suppress CHAR(1) NOT NULL,
    cvf VARCHAR(50),
    is_active BOOLEAN NOT NULL DEFAULT true,
    last_updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    raw_record TEXT
);
"""

# DDL for indexes on the production 'concepts' table.
PRODUCTION_CONCEPTS_INDEXES_DDL = [
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_cui ON {table_name} (cui);",
    "CREATE UNIQUE INDEX IF NOT EXISTS uidx_{table_name}_aui ON {table_name} (aui);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_sab_code ON {table_name} (sab, code);",
    "CREATE INDEX IF NOT EXISTS idx_{table_name}_is_active "
    "ON {table_name} (is_active);",
]

STAGING_NAMES_DDL = """
CREATE UNLOGGED TABLE IF NOT EXISTS staging_medgen_names (
    cui VARCHAR(10) NOT NULL,
    name TEXT NOT NULL,
    source VARCHAR(40) NOT NULL,
    suppress CHAR(1) NOT NULL,
    raw_record TEXT
);
"""
