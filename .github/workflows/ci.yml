name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    services:
      # Docker-in-Docker service is required for testcontainers on Linux
      dind:
        image: docker:dind
        # privileged is required for dind
        options: --privileged
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Install Poetry and Diagnose
      run: |
        pipx install poetry
        echo "--- which pipx ---"
        which pipx
        echo "--- ls -la $HOME ---"
        ls -la $HOME
        echo "--- ls -la $HOME/.local ---"
        ls -la $HOME/.local
        echo "--- ls -la $HOME/.local/bin ---"
        ls -la $HOME/.local/bin
        echo "--- printenv ---"
        printenv

    - name: Install dependencies
      run: poetry install -E test -E docs

    - name: Run tests on Linux
      # Set DOCKER_HOST to connect to the dind service on Linux
      env:
        DOCKER_HOST: tcp://dind:2375
      run: poetry run pytest --cov=py_load_medgen --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  test-other-os:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Install dependencies
      run: poetry install -E test -E docs

    - name: Run tests on ${{ matrix.os }}
      run: poetry run pytest --cov=py_load_medgen --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true